@layout ControlDeInventarios.Components.Layout.LoginLayout
@page "/Autenticacion/Login"
@using ControlDeInventarios.Models
@using ControlDeInventarios.Services
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject AuthService AuthService
@inject CustomAuthProvider AuthProvider


<h3 class="text-center mt-4">Iniciar Sesión</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger text-center">@errorMessage</div>
}

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="correo">Correo</label>
        <InputText id="correo" class="form-control" @bind-Value="loginModel.Correo" />
        <ValidationMessage For="@(() => loginModel.Correo)" />
    </div>

    <div class="form-group mt-2">
        <label for="clave">Contraseña</label>
        <InputText id="clave" type="password" class="form-control" @bind-Value="loginModel.Clave" />
        <ValidationMessage For="@(() => loginModel.Clave)" />
    </div>

    <button class="btn btn-primary btn-block w-100 mt-4" type="submit">Iniciar Sesión</button>

    <div class="text-center mt-3">
        <span>¿No tienes cuenta? </span>
        <a href="/Autenticacion/Registro">Registrarse</a>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var usuario = await AuthService.LoginAsync(loginModel.Correo, loginModel.Clave);

        if (usuario != null)
        {
            // Aquí puedes almacenar usuario en memoria o usar algún mecanismo de sesión
            AuthProvider.EstablecerUsuario(usuario);
            Navigation.NavigateTo("/Dashboards/Dashboard", true);
        }
        else
        {
            errorMessage = "Correo o contraseña incorrectos.";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "El correo es obligatorio")]
        [EmailAddress(ErrorMessage = "Formato de correo inválido")]
        public string Correo { get; set; } = string.Empty;

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        public string Clave { get; set; } = string.Empty;
    }

}
