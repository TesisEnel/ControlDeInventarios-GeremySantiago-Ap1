@page "/PerfilyConfiguracion/PerfilUsuario"
@inject UsuarioService usuarioService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations

<h3 class="text-center mt-4">Mi Perfil</h3>

@if (usuario == null)
{
    <p class="text-center">Cargando datos del usuario...</p>
}
else
{
    <EditForm Model="@usuario" OnValidSubmit="ActualizarPerfil" FormName="perfilForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nombre</label>
            <InputText class="form-control" @bind-Value="usuario.Nombre" />
        </div>

        <div class="mb-3">
            <label class="form-label">Correo</label>
            <InputText class="form-control" @bind-Value="usuario.Correo" disabled />
        </div>

        <div class="mb-3">
            <label class="form-label">Contraseña</label>
            <InputText class="form-control" type="password" @bind-Value="usuario.Clave" />
        </div>

        <button type="submit" class="btn btn-success">Actualizar</button>
    </EditForm>
}

@code {
    private Usuario? usuario;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var correo = user?.Identity?.Name;
        if (!string.IsNullOrEmpty(correo))
        {
            var usuarios = await usuarioService.ObtenerTodosAsync();
            usuario = usuarios.FirstOrDefault(u => u.Correo == correo);
        }
    }

    private async Task ActualizarPerfil()
    {
        if (usuario != null)
        {
            await usuarioService.EditarAsync(usuario);
            Navigation.NavigateTo("/Dashboards/Dashboard");
        }
    }
}
