@page "/Usuarios/UsuariosList"
@inject UsuarioService usuarioService
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS

<h3 class="text-center mt-4">Listado de Usuarios</h3>

@if (usuarios is null)
{
    <p class="text-center">Cargando usuarios...</p>
}
else if (!usuarios.Any())
{
    <p class="text-center text-muted">No hay usuarios registrados.</p>
}
else
{
    <table class="table table-bordered table-striped mt-4">
        <thead class="table-dark">
            <tr>
                <th>Nombre</th>
                <th>Correo</th>
                <th>Rol</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in usuarios)
            {
                <tr>
                    <td>@user.Nombre</td>
                    <td>@user.Correo</td>
                    <td>@user.Rol</td>
                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="() => EliminarUsuario(user.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Usuario> usuarios;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await usuarioService.ObtenerTodosAsync();
    }

    private async Task EliminarUsuario(int id)
    {
        bool confirmado = await JS.InvokeAsync<bool>("confirm", "¿Estás seguro de eliminar este usuario?");
        if (confirmado)
        {
            await usuarioService.EliminarAsync(id);
            usuarios = await usuarioService.ObtenerTodosAsync();
        }
    }
}
